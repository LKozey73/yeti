yeti design notes, ii
===

to get the ball rolling:

* it's called [yeti][6], because i've been looking for something like it for a long time (and will be for some time more, i suspect). it stands for *yeti eats teh images*, in case you're wondering what cunning recursive name i came up with. it's also an (unimaginative) jab at [yaki][7], which i pondered using for this, but i think that yaki 1) is too complex and 2) still leaves a lot of work to the user, despite all the nifty automation tricks [rui][8] has thrown in.
* the first thing i did after a whole 2 minutes thinking about this was designing an entity-relationship diagram. it was very pretty, except i don't want yeti to be database-driven. the relationships present are very simple, and the filesystem has served me well for the past 15 years, it will do nicely for this.
* if everything is a file, get as much information as possible from the file attributes.
* try to be as portable as possible, but not in the "runs on windows" sense. i will write yeti in perl, because that's what i know best, but this really means "it should be easy to re-write in python or ruby". keep the language-specific cleverness to a minimum, or avoid it if possible. python because it's what app engine supports, ruby because of that rails thing.
* burn everything. have as little client-time processing as possible. keep the raw content away from the web, by the way.
* an entry can be a photo, a text, a link or a combination of the above. the source of a photo can be anywhere in the network, the image doesn't have to be in the disk.
* support for [markdown][9]. i can't live without it.
* publish locally, or remotely through scp or a web service.

these are the starting points, much more will follow, i'm sure. in particular, i've been thinking about the management interface and authentication / authorization, to start with, and have a (fairly) long list of what i think should be available to people publishing photos.

[1]: http://www.view-sw.com/birch/ "birch"
[2]: http://toomanylights.com/ "t o o m a n y l i g h t s"
[3]: http://movabletype.org/ "movable type"
[4]: http://www.pixelpost.org/ "pixelpost"
[5]: https://github.com/pfig/yeti/tree/master "yeti on github"
[6]: http://en.wikipedia.org/wiki/Yeti "yeti on wikipedia"
[7]: http://the.taoofmac.com/space/Yaki "yaki cms"
[8]: http://the.taoofmac.com/ "the tao of mac"
[9]: http://daringfireball.net/projects/markdown/ "markdown"

